name: build-and-push
on:
  push:
    branches: [main]
  workflow_dispatch: {}

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute tags
        id: meta
        run: |
          OWNER='${{ github.repository_owner }}'
          OWNER_LOWER=$(echo "$OWNER" | tr '[:upper:]' '[:lower:]')
          IMAGE_BASE=ghcr.io/$OWNER_LOWER/qat-pipeline
          DEPS_BASE=ghcr.io/$OWNER_LOWER/qat-pipeline-deps
          TAG_SHA=${GITHUB_SHA::7}
          # lock-based tag for deps image (12-char hash of lockfile)
          LOCK_SHA=$(sha256sum uv.lock | cut -c1-12)

          echo "IMAGE_BASE=$IMAGE_BASE" >> $GITHUB_ENV
          echo "DEPS_BASE=$DEPS_BASE" >> $GITHUB_ENV
          echo "TAG_SHA=$TAG_SHA" >> $GITHUB_ENV
          echo "LOCK_SHA=$LOCK_SHA" >> $GITHUB_ENV
          echo "DEPS_IMAGE=$DEPS_BASE:cu124-$LOCK_SHA" >> $GITHUB_ENV
          echo "IMAGE_SHA=$IMAGE_BASE:cu124-$TAG_SHA" >> $GITHUB_ENV
          echo "IMAGE_LATEST=$IMAGE_BASE:latest" >> $GITHUB_ENV

      - name: Build deps image (uv lock)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.deps
          platforms: linux/amd64
          push: true
          provenance: false
          tags: |
            ${{ env.DEPS_IMAGE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build app image (uses deps image)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64
          push: true
          provenance: false
          build-args: |
            DEPS_IMAGE=${{ env.DEPS_IMAGE }}
          tags: |
            ${{ env.IMAGE_SHA }}
            ${{ env.IMAGE_LATEST }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Print image tags
        run: |
          echo "Deps:      $DEPS_IMAGE"
          echo "Immutable: $IMAGE_SHA"
          echo "Latest:    $IMAGE_LATEST"
