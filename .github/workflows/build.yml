name: build-and-push
on:
  push:
    branches: [main]
  workflow_dispatch: {}

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Free disk space (safe)
        run: |
          echo "Before cleanup:" && df -h
          sudo rm -rf /usr/share/dotnet || true
          sudo rm -rf /usr/local/lib/android || true
          sudo rm -rf /opt/ghc || true
          sudo rm -rf /opt/hostedtoolcache/CodeQL || true
          docker system prune -af || true
          echo "After cleanup:" && df -h

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to NGC (nvcr.io)
        uses: docker/login-action@v3
        with:
          registry: nvcr.io
          username: $oauthtoken
          password: ${{ secrets.NGC_API_KEY }}

      - name: Compute tags
        id: meta
        run: |
          OWNER='${{ github.repository_owner }}'
          OWNER_LOWER=$(echo "$OWNER" | tr '[:upper:]' '[:lower:]')
          IMAGE_BASE=ghcr.io/$OWNER_LOWER/qat-pipeline
          TAG_SHA=${GITHUB_SHA::7}
          echo "IMAGE_BASE=$IMAGE_BASE" >> $GITHUB_ENV
          echo "TAG_SHA=$TAG_SHA" >> $GITHUB_ENV
          echo "IMAGE_SHA=$IMAGE_BASE:cu124-$TAG_SHA" >> $GITHUB_ENV
          echo "IMAGE_LATEST=$IMAGE_BASE:latest" >> $GITHUB_ENV

      - name: Build app image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64
          push: true
          provenance: false
          tags: |
            ${{ env.IMAGE_SHA }}
            ${{ env.IMAGE_LATEST }}
          # Reduce disk pressure: avoid writing large caches
          cache-from: type=gha

      - name: Prune build cache
        if: always()
        run: |
          docker buildx prune -af || true
          docker system prune -af || true
          df -h

      - name: Print image tags
        run: |
          echo "Deps:      $DEPS_IMAGE"
          echo "Immutable: $IMAGE_SHA"
          echo "Latest:    $IMAGE_LATEST"
