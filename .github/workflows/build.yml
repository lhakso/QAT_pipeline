name: build-and-push
on:
  push:
    branches: [main]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      # Optional: cache build layers for faster rebuilds
      - uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push
        env:
          IMAGE_BASE: ghcr.io/${{ github.repository_owner }}/qat-pipeline
          SHA: ${{ github.sha }}
        run: |
          TAG_SHA=${SHA::7}

          docker buildx build \
            --platform linux/amd64 \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache-new,mode=max \
            -t $IMAGE_BASE:cu124-$TAG_SHA \
            -t $IMAGE_BASE:latest \
            --push .

          # move cache for next build
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

          echo "IMAGE_SHA=$IMAGE_BASE:cu124-$TAG_SHA" >> $GITHUB_ENV
          echo "IMAGE_LATEST=$IMAGE_BASE:latest" >> $GITHUB_ENV

      - name: Print image tags
        run: |
          echo "Immutable: $IMAGE_SHA"
          echo "Latest:    $IMAGE_LATEST"
